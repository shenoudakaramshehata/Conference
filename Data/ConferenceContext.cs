// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Conference.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Conference.Data
{
    public partial class ConferenceContext : DbContext
    {
        public ConferenceContext()
        {
        }

        public ConferenceContext(DbContextOptions<ConferenceContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventActivity_Single> EventActivity_Singles { get; set; }
        public virtual DbSet<EventSubscription> EventSubscriptions { get; set; }
        public virtual DbSet<SubscriptionActivity> SubscriptionActivities { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EventActivity_Single>(entity =>
            {
                entity.HasOne(d => d.Event)
                    .WithMany(p => p.EventActivity_Singles)
                    .HasForeignKey(d => d.EventId)
                    .HasConstraintName("FK_EventActivity_Single_Event");
            });

            modelBuilder.Entity<EventSubscription>(entity =>
            {
                entity.HasOne(d => d.Event)
                    .WithMany(p => p.EventSubscriptions)
                    .HasForeignKey(d => d.EventId)
                    .HasConstraintName("FK_EventSubscription_Event");
            });

            modelBuilder.Entity<SubscriptionActivity>(entity =>
            {
                entity.HasOne(d => d.EventActivity)
                    .WithMany(p => p.SubscriptionActivities)
                    .HasForeignKey(d => d.EventActivityId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SubscriptionActivity_EventActivity_Single");

                entity.HasOne(d => d.EventSubscription)
                    .WithMany(p => p.SubscriptionActivities)
                    .HasForeignKey(d => d.EventSubscriptionId)
                    .HasConstraintName("FK_SubscriptionActivity_EventSubscription");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}